<?php
/**
 * NHPNewHirePacketRequestSchemaNewHirePacketDataInnerNewHirePacketInner
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  MySdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BambooHR API
 *
 * BambooHR API documentation. https://www.bamboohr.com/api/documentation/
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace MySdk\Model;

use \ArrayAccess;
use \MySdk\ObjectSerializer;

/**
 * NHPNewHirePacketRequestSchemaNewHirePacketDataInnerNewHirePacketInner Class Doc Comment
 *
 * @category Class
 * @package  MySdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class NHPNewHirePacketRequestSchemaNewHirePacketDataInnerNewHirePacketInner implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'NHP_NewHirePacketRequestSchema_newHirePacketData_inner_newHirePacket_inner';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'arrive_by_time' => 'string',
        'nhp_template_id' => 'int',
        'location' => 'string',
        'other_instructions' => 'string',
        'send_get_to_know_you_email' => 'bool',
        'show_payroll_state' => 'bool',
        'show_payroll_federal' => 'bool',
        'show_payroll_direct_deposit' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'arrive_by_time' => null,
        'nhp_template_id' => null,
        'location' => null,
        'other_instructions' => null,
        'send_get_to_know_you_email' => null,
        'show_payroll_state' => null,
        'show_payroll_federal' => null,
        'show_payroll_direct_deposit' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'arrive_by_time' => true,
        'nhp_template_id' => true,
        'location' => true,
        'other_instructions' => true,
        'send_get_to_know_you_email' => false,
        'show_payroll_state' => false,
        'show_payroll_federal' => false,
        'show_payroll_direct_deposit' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'arrive_by_time' => 'arriveByTime',
        'nhp_template_id' => 'nhpTemplateId',
        'location' => 'location',
        'other_instructions' => 'otherInstructions',
        'send_get_to_know_you_email' => 'sendGetToKnowYouEmail',
        'show_payroll_state' => 'showPayrollState',
        'show_payroll_federal' => 'showPayrollFederal',
        'show_payroll_direct_deposit' => 'showPayrollDirectDeposit'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'arrive_by_time' => 'setArriveByTime',
        'nhp_template_id' => 'setNhpTemplateId',
        'location' => 'setLocation',
        'other_instructions' => 'setOtherInstructions',
        'send_get_to_know_you_email' => 'setSendGetToKnowYouEmail',
        'show_payroll_state' => 'setShowPayrollState',
        'show_payroll_federal' => 'setShowPayrollFederal',
        'show_payroll_direct_deposit' => 'setShowPayrollDirectDeposit'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'arrive_by_time' => 'getArriveByTime',
        'nhp_template_id' => 'getNhpTemplateId',
        'location' => 'getLocation',
        'other_instructions' => 'getOtherInstructions',
        'send_get_to_know_you_email' => 'getSendGetToKnowYouEmail',
        'show_payroll_state' => 'getShowPayrollState',
        'show_payroll_federal' => 'getShowPayrollFederal',
        'show_payroll_direct_deposit' => 'getShowPayrollDirectDeposit'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('arrive_by_time', $data ?? [], null);
        $this->setIfExists('nhp_template_id', $data ?? [], null);
        $this->setIfExists('location', $data ?? [], null);
        $this->setIfExists('other_instructions', $data ?? [], null);
        $this->setIfExists('send_get_to_know_you_email', $data ?? [], null);
        $this->setIfExists('show_payroll_state', $data ?? [], null);
        $this->setIfExists('show_payroll_federal', $data ?? [], null);
        $this->setIfExists('show_payroll_direct_deposit', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets arrive_by_time
     *
     * @return string|null
     */
    public function getArriveByTime()
    {
        return $this->container['arrive_by_time'];
    }

    /**
     * Sets arrive_by_time
     *
     * @param string|null $arrive_by_time arrive_by_time
     *
     * @return self
     */
    public function setArriveByTime($arrive_by_time)
    {
        if (is_null($arrive_by_time)) {
            array_push($this->openAPINullablesSetToNull, 'arrive_by_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('arrive_by_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['arrive_by_time'] = $arrive_by_time;

        return $this;
    }

    /**
     * Gets nhp_template_id
     *
     * @return int|null
     */
    public function getNhpTemplateId()
    {
        return $this->container['nhp_template_id'];
    }

    /**
     * Sets nhp_template_id
     *
     * @param int|null $nhp_template_id nhp_template_id
     *
     * @return self
     */
    public function setNhpTemplateId($nhp_template_id)
    {
        if (is_null($nhp_template_id)) {
            array_push($this->openAPINullablesSetToNull, 'nhp_template_id');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('nhp_template_id', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['nhp_template_id'] = $nhp_template_id;

        return $this;
    }

    /**
     * Gets location
     *
     * @return string|null
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param string|null $location location
     *
     * @return self
     */
    public function setLocation($location)
    {
        if (is_null($location)) {
            array_push($this->openAPINullablesSetToNull, 'location');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('location', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets other_instructions
     *
     * @return string|null
     */
    public function getOtherInstructions()
    {
        return $this->container['other_instructions'];
    }

    /**
     * Sets other_instructions
     *
     * @param string|null $other_instructions other_instructions
     *
     * @return self
     */
    public function setOtherInstructions($other_instructions)
    {
        if (is_null($other_instructions)) {
            array_push($this->openAPINullablesSetToNull, 'other_instructions');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('other_instructions', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['other_instructions'] = $other_instructions;

        return $this;
    }

    /**
     * Gets send_get_to_know_you_email
     *
     * @return bool|null
     */
    public function getSendGetToKnowYouEmail()
    {
        return $this->container['send_get_to_know_you_email'];
    }

    /**
     * Sets send_get_to_know_you_email
     *
     * @param bool|null $send_get_to_know_you_email send_get_to_know_you_email
     *
     * @return self
     */
    public function setSendGetToKnowYouEmail($send_get_to_know_you_email)
    {
        if (is_null($send_get_to_know_you_email)) {
            throw new \InvalidArgumentException('non-nullable send_get_to_know_you_email cannot be null');
        }
        $this->container['send_get_to_know_you_email'] = $send_get_to_know_you_email;

        return $this;
    }

    /**
     * Gets show_payroll_state
     *
     * @return bool|null
     */
    public function getShowPayrollState()
    {
        return $this->container['show_payroll_state'];
    }

    /**
     * Sets show_payroll_state
     *
     * @param bool|null $show_payroll_state show_payroll_state
     *
     * @return self
     */
    public function setShowPayrollState($show_payroll_state)
    {
        if (is_null($show_payroll_state)) {
            throw new \InvalidArgumentException('non-nullable show_payroll_state cannot be null');
        }
        $this->container['show_payroll_state'] = $show_payroll_state;

        return $this;
    }

    /**
     * Gets show_payroll_federal
     *
     * @return bool|null
     */
    public function getShowPayrollFederal()
    {
        return $this->container['show_payroll_federal'];
    }

    /**
     * Sets show_payroll_federal
     *
     * @param bool|null $show_payroll_federal show_payroll_federal
     *
     * @return self
     */
    public function setShowPayrollFederal($show_payroll_federal)
    {
        if (is_null($show_payroll_federal)) {
            throw new \InvalidArgumentException('non-nullable show_payroll_federal cannot be null');
        }
        $this->container['show_payroll_federal'] = $show_payroll_federal;

        return $this;
    }

    /**
     * Gets show_payroll_direct_deposit
     *
     * @return bool|null
     */
    public function getShowPayrollDirectDeposit()
    {
        return $this->container['show_payroll_direct_deposit'];
    }

    /**
     * Sets show_payroll_direct_deposit
     *
     * @param bool|null $show_payroll_direct_deposit show_payroll_direct_deposit
     *
     * @return self
     */
    public function setShowPayrollDirectDeposit($show_payroll_direct_deposit)
    {
        if (is_null($show_payroll_direct_deposit)) {
            throw new \InvalidArgumentException('non-nullable show_payroll_direct_deposit cannot be null');
        }
        $this->container['show_payroll_direct_deposit'] = $show_payroll_direct_deposit;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


