<?php
/**
 * NewHirePacketTemplate
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  MySdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BambooHR API
 *
 * BambooHR API documentation. https://www.bamboohr.com/api/documentation/
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace MySdk\Model;

use \ArrayAccess;
use \MySdk\ObjectSerializer;

/**
 * NewHirePacketTemplate Class Doc Comment
 *
 * @category Class
 * @description Data object representing a new hire packet template
 * @package  MySdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class NewHirePacketTemplate implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'NewHirePacketTemplate';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'arrive_by_time' => 'string',
        'contact_employee_id' => 'int',
        'created_user_id' => 'int',
        'default' => 'bool',
        'get_to_know_you_email_template_id' => 'int',
        'send_get_to_know_you_email' => 'bool',
        'archived' => 'bool',
        'get_to_know_you_questions' => '\MySdk\Model\NewHirePacketTemplateGetToKnowYouQuestion[]',
        'get_to_know_you_recipients' => '\MySdk\Model\NewHirePacketTemplateGetToKnowYouRecipient[]',
        'location' => 'string',
        'name' => 'string',
        'other_instructions' => 'string',
        'template_fields' => '\MySdk\Model\NewHirePacketTemplateField[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'arrive_by_time' => null,
        'contact_employee_id' => null,
        'created_user_id' => null,
        'default' => null,
        'get_to_know_you_email_template_id' => null,
        'send_get_to_know_you_email' => null,
        'archived' => null,
        'get_to_know_you_questions' => null,
        'get_to_know_you_recipients' => null,
        'location' => null,
        'name' => null,
        'other_instructions' => null,
        'template_fields' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'id' => true,
        'arrive_by_time' => true,
        'contact_employee_id' => false,
        'created_user_id' => false,
        'default' => false,
        'get_to_know_you_email_template_id' => true,
        'send_get_to_know_you_email' => false,
        'archived' => false,
        'get_to_know_you_questions' => false,
        'get_to_know_you_recipients' => false,
        'location' => false,
        'name' => false,
        'other_instructions' => false,
        'template_fields' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'arrive_by_time' => 'arriveByTime',
        'contact_employee_id' => 'contactEmployeeId',
        'created_user_id' => 'createdUserId',
        'default' => 'default',
        'get_to_know_you_email_template_id' => 'getToKnowYouEmailTemplateId',
        'send_get_to_know_you_email' => 'sendGetToKnowYouEmail',
        'archived' => 'archived',
        'get_to_know_you_questions' => 'getToKnowYouQuestions',
        'get_to_know_you_recipients' => 'getToKnowYouRecipients',
        'location' => 'location',
        'name' => 'name',
        'other_instructions' => 'otherInstructions',
        'template_fields' => 'templateFields'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'arrive_by_time' => 'setArriveByTime',
        'contact_employee_id' => 'setContactEmployeeId',
        'created_user_id' => 'setCreatedUserId',
        'default' => 'setDefault',
        'get_to_know_you_email_template_id' => 'setGetToKnowYouEmailTemplateId',
        'send_get_to_know_you_email' => 'setSendGetToKnowYouEmail',
        'archived' => 'setArchived',
        'get_to_know_you_questions' => 'setGetToKnowYouQuestions',
        'get_to_know_you_recipients' => 'setGetToKnowYouRecipients',
        'location' => 'setLocation',
        'name' => 'setName',
        'other_instructions' => 'setOtherInstructions',
        'template_fields' => 'setTemplateFields'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'arrive_by_time' => 'getArriveByTime',
        'contact_employee_id' => 'getContactEmployeeId',
        'created_user_id' => 'getCreatedUserId',
        'default' => 'getDefault',
        'get_to_know_you_email_template_id' => 'getGetToKnowYouEmailTemplateId',
        'send_get_to_know_you_email' => 'getSendGetToKnowYouEmail',
        'archived' => 'getArchived',
        'get_to_know_you_questions' => 'getGetToKnowYouQuestions',
        'get_to_know_you_recipients' => 'getGetToKnowYouRecipients',
        'location' => 'getLocation',
        'name' => 'getName',
        'other_instructions' => 'getOtherInstructions',
        'template_fields' => 'getTemplateFields'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('id', $data ?? [], null);
        $this->setIfExists('arrive_by_time', $data ?? [], null);
        $this->setIfExists('contact_employee_id', $data ?? [], null);
        $this->setIfExists('created_user_id', $data ?? [], null);
        $this->setIfExists('default', $data ?? [], null);
        $this->setIfExists('get_to_know_you_email_template_id', $data ?? [], null);
        $this->setIfExists('send_get_to_know_you_email', $data ?? [], null);
        $this->setIfExists('archived', $data ?? [], null);
        $this->setIfExists('get_to_know_you_questions', $data ?? [], null);
        $this->setIfExists('get_to_know_you_recipients', $data ?? [], null);
        $this->setIfExists('location', $data ?? [], null);
        $this->setIfExists('name', $data ?? [], null);
        $this->setIfExists('other_instructions', $data ?? [], null);
        $this->setIfExists('template_fields', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id Template ID
     *
     * @return self
     */
    public function setId($id)
    {
        if (is_null($id)) {
            array_push($this->openAPINullablesSetToNull, 'id');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('id', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets arrive_by_time
     *
     * @return string|null
     */
    public function getArriveByTime()
    {
        return $this->container['arrive_by_time'];
    }

    /**
     * Sets arrive_by_time
     *
     * @param string|null $arrive_by_time Time employee should arrive by
     *
     * @return self
     */
    public function setArriveByTime($arrive_by_time)
    {
        if (is_null($arrive_by_time)) {
            array_push($this->openAPINullablesSetToNull, 'arrive_by_time');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('arrive_by_time', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['arrive_by_time'] = $arrive_by_time;

        return $this;
    }

    /**
     * Gets contact_employee_id
     *
     * @return int|null
     */
    public function getContactEmployeeId()
    {
        return $this->container['contact_employee_id'];
    }

    /**
     * Sets contact_employee_id
     *
     * @param int|null $contact_employee_id Contact employee ID
     *
     * @return self
     */
    public function setContactEmployeeId($contact_employee_id)
    {
        if (is_null($contact_employee_id)) {
            throw new \InvalidArgumentException('non-nullable contact_employee_id cannot be null');
        }
        $this->container['contact_employee_id'] = $contact_employee_id;

        return $this;
    }

    /**
     * Gets created_user_id
     *
     * @return int|null
     */
    public function getCreatedUserId()
    {
        return $this->container['created_user_id'];
    }

    /**
     * Sets created_user_id
     *
     * @param int|null $created_user_id ID of user who created the template
     *
     * @return self
     */
    public function setCreatedUserId($created_user_id)
    {
        if (is_null($created_user_id)) {
            throw new \InvalidArgumentException('non-nullable created_user_id cannot be null');
        }
        $this->container['created_user_id'] = $created_user_id;

        return $this;
    }

    /**
     * Gets default
     *
     * @return bool|null
     */
    public function getDefault()
    {
        return $this->container['default'];
    }

    /**
     * Sets default
     *
     * @param bool|null $default Whether this is the default template
     *
     * @return self
     */
    public function setDefault($default)
    {
        if (is_null($default)) {
            throw new \InvalidArgumentException('non-nullable default cannot be null');
        }
        $this->container['default'] = $default;

        return $this;
    }

    /**
     * Gets get_to_know_you_email_template_id
     *
     * @return int|null
     */
    public function getGetToKnowYouEmailTemplateId()
    {
        return $this->container['get_to_know_you_email_template_id'];
    }

    /**
     * Sets get_to_know_you_email_template_id
     *
     * @param int|null $get_to_know_you_email_template_id Get to know you email template ID
     *
     * @return self
     */
    public function setGetToKnowYouEmailTemplateId($get_to_know_you_email_template_id)
    {
        if (is_null($get_to_know_you_email_template_id)) {
            array_push($this->openAPINullablesSetToNull, 'get_to_know_you_email_template_id');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('get_to_know_you_email_template_id', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['get_to_know_you_email_template_id'] = $get_to_know_you_email_template_id;

        return $this;
    }

    /**
     * Gets send_get_to_know_you_email
     *
     * @return bool|null
     */
    public function getSendGetToKnowYouEmail()
    {
        return $this->container['send_get_to_know_you_email'];
    }

    /**
     * Sets send_get_to_know_you_email
     *
     * @param bool|null $send_get_to_know_you_email Whether to send get to know you email
     *
     * @return self
     */
    public function setSendGetToKnowYouEmail($send_get_to_know_you_email)
    {
        if (is_null($send_get_to_know_you_email)) {
            throw new \InvalidArgumentException('non-nullable send_get_to_know_you_email cannot be null');
        }
        $this->container['send_get_to_know_you_email'] = $send_get_to_know_you_email;

        return $this;
    }

    /**
     * Gets archived
     *
     * @return bool|null
     */
    public function getArchived()
    {
        return $this->container['archived'];
    }

    /**
     * Sets archived
     *
     * @param bool|null $archived Whether this template is archived
     *
     * @return self
     */
    public function setArchived($archived)
    {
        if (is_null($archived)) {
            throw new \InvalidArgumentException('non-nullable archived cannot be null');
        }
        $this->container['archived'] = $archived;

        return $this;
    }

    /**
     * Gets get_to_know_you_questions
     *
     * @return \MySdk\Model\NewHirePacketTemplateGetToKnowYouQuestion[]|null
     */
    public function getGetToKnowYouQuestions()
    {
        return $this->container['get_to_know_you_questions'];
    }

    /**
     * Sets get_to_know_you_questions
     *
     * @param \MySdk\Model\NewHirePacketTemplateGetToKnowYouQuestion[]|null $get_to_know_you_questions Get to know you questions
     *
     * @return self
     */
    public function setGetToKnowYouQuestions($get_to_know_you_questions)
    {
        if (is_null($get_to_know_you_questions)) {
            throw new \InvalidArgumentException('non-nullable get_to_know_you_questions cannot be null');
        }
        $this->container['get_to_know_you_questions'] = $get_to_know_you_questions;

        return $this;
    }

    /**
     * Gets get_to_know_you_recipients
     *
     * @return \MySdk\Model\NewHirePacketTemplateGetToKnowYouRecipient[]|null
     */
    public function getGetToKnowYouRecipients()
    {
        return $this->container['get_to_know_you_recipients'];
    }

    /**
     * Sets get_to_know_you_recipients
     *
     * @param \MySdk\Model\NewHirePacketTemplateGetToKnowYouRecipient[]|null $get_to_know_you_recipients Get to know you recipients
     *
     * @return self
     */
    public function setGetToKnowYouRecipients($get_to_know_you_recipients)
    {
        if (is_null($get_to_know_you_recipients)) {
            throw new \InvalidArgumentException('non-nullable get_to_know_you_recipients cannot be null');
        }
        $this->container['get_to_know_you_recipients'] = $get_to_know_you_recipients;

        return $this;
    }

    /**
     * Gets location
     *
     * @return string|null
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param string|null $location Location of the template
     *
     * @return self
     */
    public function setLocation($location)
    {
        if (is_null($location)) {
            throw new \InvalidArgumentException('non-nullable location cannot be null');
        }
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name Name of the template
     *
     * @return self
     */
    public function setName($name)
    {
        if (is_null($name)) {
            throw new \InvalidArgumentException('non-nullable name cannot be null');
        }
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets other_instructions
     *
     * @return string|null
     */
    public function getOtherInstructions()
    {
        return $this->container['other_instructions'];
    }

    /**
     * Sets other_instructions
     *
     * @param string|null $other_instructions Other instructions for the template
     *
     * @return self
     */
    public function setOtherInstructions($other_instructions)
    {
        if (is_null($other_instructions)) {
            throw new \InvalidArgumentException('non-nullable other_instructions cannot be null');
        }
        $this->container['other_instructions'] = $other_instructions;

        return $this;
    }

    /**
     * Gets template_fields
     *
     * @return \MySdk\Model\NewHirePacketTemplateField[]|null
     */
    public function getTemplateFields()
    {
        return $this->container['template_fields'];
    }

    /**
     * Sets template_fields
     *
     * @param \MySdk\Model\NewHirePacketTemplateField[]|null $template_fields Template fields
     *
     * @return self
     */
    public function setTemplateFields($template_fields)
    {
        if (is_null($template_fields)) {
            throw new \InvalidArgumentException('non-nullable template_fields cannot be null');
        }
        $this->container['template_fields'] = $template_fields;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


