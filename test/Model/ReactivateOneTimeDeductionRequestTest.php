<?php
/**
 * ReactivateOneTimeDeductionRequestTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  MySdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BambooHR API
 *
 * BambooHR API documentation. https://www.bamboohr.com/api/documentation/
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace MySdk\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ReactivateOneTimeDeductionRequestTest Class Doc Comment
 *
 * @category    Class
 * @description Request object for reactivating one-time deductions
 * @package     MySdk
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ReactivateOneTimeDeductionRequestTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ReactivateOneTimeDeductionRequest"
     */
    public function testReactivateOneTimeDeductionRequest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "client_id"
     */
    public function testPropertyClientId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pay_cycle_id"
     */
    public function testPropertyPayCycleId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payroll_pay_cycle_id"
     */
    public function testPropertyPayrollPayCycleId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "core_employee_id"
     */
    public function testPropertyCoreEmployeeId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "direct_deposit_disable"
     */
    public function testPropertyDirectDepositDisable()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deduction_disable"
     */
    public function testPropertyDeductionDisable()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "note"
     */
    public function testPropertyNote()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pay_period_id"
     */
    public function testPropertyPayPeriodId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "federal_is_exempt"
     */
    public function testPropertyFederalIsExempt()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "federal_withholding_additional"
     */
    public function testPropertyFederalWithholdingAdditional()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "federal_withholding_additional_type"
     */
    public function testPropertyFederalWithholdingAdditionalType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "state_is_exempt"
     */
    public function testPropertyStateIsExempt()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "state_withholding_additional"
     */
    public function testPropertyStateWithholdingAdditional()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "state_withholding_additional_type"
     */
    public function testPropertyStateWithholdingAdditionalType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "use_federal_custom_override"
     */
    public function testPropertyUseFederalCustomOverride()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "federal_override_amount"
     */
    public function testPropertyFederalOverrideAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "federal_override_amount_type"
     */
    public function testPropertyFederalOverrideAmountType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "check_id"
     */
    public function testPropertyCheckId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "create"
     */
    public function testPropertyCreate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
