<?php
/**
 * ReactivateOneTimeDeductionResponseTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  MySdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BambooHR API
 *
 * BambooHR API documentation. https://www.bamboohr.com/api/documentation/
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace MySdk\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ReactivateOneTimeDeductionResponseTest Class Doc Comment
 *
 * @category    Class
 * @description Reactivate one-time deduction response
 * @package     MySdk
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ReactivateOneTimeDeductionResponseTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ReactivateOneTimeDeductionResponse"
     */
    public function testReactivateOneTimeDeductionResponse()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pay_cycle_ts1_deduction_id"
     */
    public function testPropertyPayCycleTs1DeductionId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pay_cycle_id"
     */
    public function testPropertyPayCycleId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employee_id"
     */
    public function testPropertyEmployeeId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "trans_counter"
     */
    public function testPropertyTransCounter()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "client_deduction_id"
     */
    public function testPropertyClientDeductionId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employee_deduction_id"
     */
    public function testPropertyEmployeeDeductionId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deduction_type_id"
     */
    public function testPropertyDeductionTypeId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deduction_name"
     */
    public function testPropertyDeductionName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "based_on"
     */
    public function testPropertyBasedOn()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "amount_type"
     */
    public function testPropertyAmountType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rate_original"
     */
    public function testPropertyRateOriginal()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "rate"
     */
    public function testPropertyRate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cap_amount_type"
     */
    public function testPropertyCapAmountType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cap_amount"
     */
    public function testPropertyCapAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_taxable"
     */
    public function testPropertyIsTaxable()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employer_based_on"
     */
    public function testPropertyEmployerBasedOn()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employer_amount_type"
     */
    public function testPropertyEmployerAmountType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employer_rate_original"
     */
    public function testPropertyEmployerRateOriginal()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employer_rate"
     */
    public function testPropertyEmployerRate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employer_cap_amount_type"
     */
    public function testPropertyEmployerCapAmountType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employer_cap_amount"
     */
    public function testPropertyEmployerCapAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
