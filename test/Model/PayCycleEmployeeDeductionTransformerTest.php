<?php
/**
 * PayCycleEmployeeDeductionTransformerTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  MySdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BambooHR API
 *
 * BambooHR API documentation. https://www.bamboohr.com/api/documentation/
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace MySdk\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * PayCycleEmployeeDeductionTransformerTest Class Doc Comment
 *
 * @category    Class
 * @description PayCycleEmployeeDeductionTransformer
 * @package     MySdk
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class PayCycleEmployeeDeductionTransformerTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "PayCycleEmployeeDeductionTransformer"
     */
    public function testPayCycleEmployeeDeductionTransformer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pay_cycle_employee_deduction_id"
     */
    public function testPropertyPayCycleEmployeeDeductionId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deduction_name"
     */
    public function testPropertyDeductionName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employee_deduction_id"
     */
    public function testPropertyEmployeeDeductionId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deduction_type_id"
     */
    public function testPropertyDeductionTypeId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deduction_type_name"
     */
    public function testPropertyDeductionTypeName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "benefit_type_name"
     */
    public function testPropertyBenefitTypeName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_benefit_deduction"
     */
    public function testPropertyIsBenefitDeduction()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_level_deduction_id"
     */
    public function testPropertyCompanyLevelDeductionId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable"
     */
    public function testPropertyDisable()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_pays_amount"
     */
    public function testPropertyCompanyPaysAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_pays_amount_original"
     */
    public function testPropertyCompanyPaysAmountOriginal()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_pays_amount_type"
     */
    public function testPropertyCompanyPaysAmountType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_pays_amount_type_based_on"
     */
    public function testPropertyCompanyPaysAmountTypeBasedOn()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_pays_annual_max"
     */
    public function testPropertyCompanyPaysAnnualMax()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_pays_annual_max_current_amount"
     */
    public function testPropertyCompanyPaysAnnualMaxCurrentAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_pays_cap_amount"
     */
    public function testPropertyCompanyPaysCapAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_pays_cap_amount_type"
     */
    public function testPropertyCompanyPaysCapAmountType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_pays_cap_amount_current_amount"
     */
    public function testPropertyCompanyPaysCapAmountCurrentAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employee_pays_amount"
     */
    public function testPropertyEmployeePaysAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employee_pays_amount_original"
     */
    public function testPropertyEmployeePaysAmountOriginal()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employee_pays_amount_type"
     */
    public function testPropertyEmployeePaysAmountType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employee_pays_amount_type_based_on"
     */
    public function testPropertyEmployeePaysAmountTypeBasedOn()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employee_pays_annual_max"
     */
    public function testPropertyEmployeePaysAnnualMax()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employee_pays_annual_max_current_amount"
     */
    public function testPropertyEmployeePaysAnnualMaxCurrentAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employee_pays_cap_amount"
     */
    public function testPropertyEmployeePaysCapAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employee_pays_cap_amount_type"
     */
    public function testPropertyEmployeePaysCapAmountType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employee_pays_cap_amount_current_amount"
     */
    public function testPropertyEmployeePaysCapAmountCurrentAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "safe_harbor"
     */
    public function testPropertySafeHarbor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
