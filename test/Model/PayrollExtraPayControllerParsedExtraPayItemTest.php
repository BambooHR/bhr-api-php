<?php
/**
 * PayrollExtraPayControllerParsedExtraPayItemTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  MySdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BambooHR API
 *
 * BambooHR API documentation. https://www.bamboohr.com/api/documentation/
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace MySdk\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * PayrollExtraPayControllerParsedExtraPayItemTest Class Doc Comment
 *
 * @category    Class
 * @description Represents a parsed extra pay item from a file upload
 * @package     MySdk
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class PayrollExtraPayControllerParsedExtraPayItemTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "PayrollExtraPayControllerParsedExtraPayItem"
     */
    public function testPayrollExtraPayControllerParsedExtraPayItem()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "amount_error_code"
     */
    public function testPropertyAmountErrorCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "amount_user_input"
     */
    public function testPropertyAmountUserInput()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employee_error_code"
     */
    public function testPropertyEmployeeErrorCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employee_id"
     */
    public function testPropertyEmployeeId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "employee_number_user_input"
     */
    public function testPropertyEmployeeNumberUserInput()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pay_type_error_code"
     */
    public function testPropertyPayTypeErrorCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pay_type_id"
     */
    public function testPropertyPayTypeId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pay_type_user_input"
     */
    public function testPropertyPayTypeUserInput()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_valid"
     */
    public function testPropertyIsValid()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_valid_amount"
     */
    public function testPropertyIsValidAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_valid_employee"
     */
    public function testPropertyIsValidEmployee()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_valid_pay_type"
     */
    public function testPropertyIsValidPayType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
