<?php
/**
 * PublicAPIApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  MySdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BambooHR API
 *
 * BambooHR API documentation. https://www.bamboohr.com/api/documentation/
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace MySdk\Test\Api;

use \MySdk\Configuration;
use \MySdk\ApiException;
use \MySdk\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PublicAPIApiTest Class Doc Comment
 *
 * @category Class
 * @package  MySdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PublicAPIApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addCompanyFileCategory
     *
     * Add Company File Category.
     *
     */
    public function testAddCompanyFileCategory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addEmployee
     *
     * Add Employee.
     *
     */
    public function testAddEmployee()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addEmployeeDependent
     *
     * Add an employee dependent.
     *
     */
    public function testAddEmployeeDependent()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addEmployeeFileCategory
     *
     * Add Employee File Category.
     *
     */
    public function testAddEmployeeFileCategory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addEmployeeTableRow
     *
     * Adds a table row.
     *
     */
    public function testAddEmployeeTableRow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addEmployeeTableRowV1
     *
     * Adds a table row.
     *
     */
    public function testAddEmployeeTableRowV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addNewCandidate
     *
     * Add New Candidate.
     *
     */
    public function testAddNewCandidate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addNewEmployeeTrainingRecord
     *
     * Add New Employee Training Record.
     *
     */
    public function testAddNewEmployeeTrainingRecord()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addNewJobOpening
     *
     * Add New Job Opening.
     *
     */
    public function testAddNewJobOpening()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addTrainingCategory
     *
     * Add Training Category.
     *
     */
    public function testAddTrainingCategory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addTrainingType
     *
     * Add Training Type.
     *
     */
    public function testAddTrainingType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for b86bb5db603786dfc98c8f6a7bb1a218
     *
     * Add Timesheet Clock-In Entry.
     *
     */
    public function testB86bb5db603786dfc98c8f6a7bb1a218()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for call0f428442e53dc46d1e2c8ff5b7a483a8
     *
     * addTimeTrackingBulk.
     *
     */
    public function testCall0f428442e53dc46d1e2c8ff5b7a483a8()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for call149e00955713fb486cd7a81dd6ee31aa
     *
     * Add/Edit Timesheet Clock Entries.
     *
     */
    public function testCall149e00955713fb486cd7a81dd6ee31aa()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for call14e73aef978eb81d51fdbd74e0e83823
     *
     * adjustTimeTracking.
     *
     */
    public function testCall14e73aef978eb81d51fdbd74e0e83823()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for call59d25b8c03d013c96fbbf866769b8206
     *
     * Get Field Options.
     *
     */
    public function testCall59d25b8c03d013c96fbbf866769b8206()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for call5e1c5b4ef12e61d1bc975e8b4e00c38d
     *
     * getTimeTrackingByTimeTrackingId.
     *
     */
    public function testCall5e1c5b4ef12e61d1bc975e8b4e00c38d()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for call69c777478f5d52dee1b4f0937dca154f
     *
     * addTimeTracking.
     *
     */
    public function testCall69c777478f5d52dee1b4f0937dca154f()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for call88ef63550f43537c6b3bfaa03d51d95d
     *
     * Add Timesheet Clock-Out Entry.
     *
     */
    public function testCall88ef63550f43537c6b3bfaa03d51d95d()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for call910252128bfbd9d42e50f9dc31bb6120
     *
     * Add/Edit Timesheet Hour Entries.
     *
     */
    public function testCall910252128bfbd9d42e50f9dc31bb6120()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for call9a6d5660f03eadcf705c808a1f44b8c4
     *
     * Get Timesheet Entries.
     *
     */
    public function testCall9a6d5660f03eadcf705c808a1f44b8c4()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for db65bacaf29686d9c3b1296f6047a065
     *
     * Delete Timesheet Hour Entries.
     *
     */
    public function testDb65bacaf29686d9c3b1296f6047a065()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dcb62a5d1780635153b978462f9debd0
     *
     * Delete timesheet clock entries..
     *
     */
    public function testDcb62a5d1780635153b978462f9debd0()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCompanyFile
     *
     * Delete Company File.
     *
     */
    public function testDeleteCompanyFile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteEmployeeFile
     *
     * Delete Employee File.
     *
     */
    public function testDeleteEmployeeFile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteEmployeeTableRowV1
     *
     * Deletes a table row.
     *
     */
    public function testDeleteEmployeeTableRowV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteEmployeeTrainingRecord
     *
     * Delete Employee Training Record.
     *
     */
    public function testDeleteEmployeeTrainingRecord()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteGoal
     *
     * Delete Goal.
     *
     */
    public function testDeleteGoal()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteGoalComment
     *
     * Delete Goal Comment.
     *
     */
    public function testDeleteGoalComment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteTrainingCategory
     *
     * Delete Training Category.
     *
     */
    public function testDeleteTrainingCategory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteTrainingType
     *
     * Delete Training Type.
     *
     */
    public function testDeleteTrainingType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteWebhook
     *
     * Delete Webhook.
     *
     */
    public function testDeleteWebhook()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for estimateFutureTimeOffBalances
     *
     * Estimate Future Time Off Balances.
     *
     */
    public function testEstimateFutureTimeOffBalances()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for f97efc203b25647724accb9da7dda7db
     *
     * deleteTimeTrackingByTimeTrackingId.
     *
     */
    public function testF97efc203b25647724accb9da7dda7db()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAListOfUsers
     *
     * Get a List of Users.
     *
     */
    public function testGetAListOfUsers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAListOfWhosOut
     *
     * Get a list of Who's Out.
     *
     */
    public function testGetAListOfWhosOut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApplicationDetails
     *
     * Get Application Details.
     *
     */
    public function testGetApplicationDetails()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getApplications
     *
     * Get Applications.
     *
     */
    public function testGetApplications()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBenefitCoverages
     *
     * Get benefit coverages.
     *
     */
    public function testGetBenefitCoverages()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getBenefitDeductionTypes
     *
     * Get benefit deduction types.
     *
     */
    public function testGetBenefitDeductionTypes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getByReportId
     *
     * Get Report by ID.
     *
     */
    public function testGetByReportId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCanCreateGoal
     *
     * Can Create a Goal.
     *
     */
    public function testGetCanCreateGoal()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getChangedEmployeeIds
     *
     * Gets all updated employee IDs.
     *
     */
    public function testGetChangedEmployeeIds()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getChangedEmployeeTableData
     *
     * Gets all updated employee table data.
     *
     */
    public function testGetChangedEmployeeTableData()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCompanyEINs
     *
     * Get Company EINs.
     *
     */
    public function testGetCompanyEINs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCompanyFile
     *
     * Get an Company File.
     *
     */
    public function testGetCompanyFile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCompanyInformation
     *
     * Get Company Information.
     *
     */
    public function testGetCompanyInformation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCompanyLocations
     *
     * Get Company Locations.
     *
     */
    public function testGetCompanyLocations()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCompanyReport
     *
     * Get company report.
     *
     */
    public function testGetCompanyReport()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDataFromDataset
     *
     * Get Data from Dataset.
     *
     */
    public function testGetDataFromDataset()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDataSets
     *
     * Get Data Sets.
     *
     */
    public function testGetDataSets()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEmployee
     *
     * Get Employee.
     *
     */
    public function testGetEmployee()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEmployeeDependent
     *
     * Get employee dependent.
     *
     */
    public function testGetEmployeeDependent()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEmployeeDependents
     *
     * Get all employee dependents.
     *
     */
    public function testGetEmployeeDependents()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEmployeeFile
     *
     * Get an Employee File.
     *
     */
    public function testGetEmployeeFile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEmployeePhoto
     *
     * Get an employee photo.
     *
     */
    public function testGetEmployeePhoto()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEmployeeTableRow
     *
     * Gets table rows for a given employee and table combination.
     *
     */
    public function testGetEmployeeTableRow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEmployeesDirectory
     *
     * Get Employee Directory.
     *
     */
    public function testGetEmployeesDirectory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFieldsFromDataset
     *
     * Get Fields from Dataset.
     *
     */
    public function testGetFieldsFromDataset()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGoalAggregate
     *
     * Get Aggregate Goal Info.
     *
     */
    public function testGetGoalAggregate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGoalComments
     *
     * Get Goal Comments.
     *
     */
    public function testGetGoalComments()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGoals
     *
     * Get Goals.
     *
     */
    public function testGetGoals()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGoalsAggregateV1
     *
     * Get All Aggregate Goal Info.
     *
     */
    public function testGetGoalsAggregateV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGoalsAggregateV11
     *
     * Get All Aggregate Goal Info, Version 1.1.
     *
     */
    public function testGetGoalsAggregateV11()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGoalsAggregateV12
     *
     * Get All Aggregate Goal Info, Version 1.2.
     *
     */
    public function testGetGoalsAggregateV12()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGoalsAlignmentOptions
     *
     * Alignable Goal Options.
     *
     */
    public function testGetGoalsAlignmentOptions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGoalsFiltersV1
     *
     * .
     *
     */
    public function testGetGoalsFiltersV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGoalsFiltersV11
     *
     * .
     *
     */
    public function testGetGoalsFiltersV11()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGoalsFiltersV12
     *
     * Get Goal Status Counts, Version 1.2.
     *
     */
    public function testGetGoalsFiltersV12()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGoalsShareOptions
     *
     * Available Goal Sharing Options.
     *
     */
    public function testGetGoalsShareOptions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getHiringLeads
     *
     * Get Hiring Leads.
     *
     */
    public function testGetHiringLeads()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getJobSummaries
     *
     * Get Job Summaries.
     *
     */
    public function testGetJobSummaries()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMemberBenefit
     *
     * Get a list of member benefit events.
     *
     */
    public function testGetMemberBenefit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMonitorFields
     *
     * Get monitor fields.
     *
     */
    public function testGetMonitorFields()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getStatuses
     *
     * Get Statuses.
     *
     */
    public function testGetStatuses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTimeOffPolicies
     *
     * Get Time Off Policies.
     *
     */
    public function testGetTimeOffPolicies()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTimeOffTypes
     *
     * Get Time Off Types.
     *
     */
    public function testGetTimeOffTypes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebhook
     *
     * Get Webhook.
     *
     */
    public function testGetWebhook()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebhookList
     *
     * Gets as list of webhooks for the user API key..
     *
     */
    public function testGetWebhookList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebhookLogs
     *
     * Get Webhook Logs.
     *
     */
    public function testGetWebhookLogs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listCompanyFiles
     *
     * List company files and categories.
     *
     */
    public function testListCompanyFiles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listEmployeeFiles
     *
     * List employee files and categories.
     *
     */
    public function testListEmployeeFiles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listEmployeeTrainings
     *
     * List Employee Trainings.
     *
     */
    public function testListEmployeeTrainings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listReports
     *
     * List Reports.
     *
     */
    public function testListReports()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTrainingCategories
     *
     * List Training Categories.
     *
     */
    public function testListTrainingCategories()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTrainingTypes
     *
     * List Training Types.
     *
     */
    public function testListTrainingTypes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for login
     *
     * User Login.
     *
     */
    public function testLogin()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataAddOrUpdateValuesForListFields
     *
     * Add or Update Values for List Fields.
     *
     */
    public function testMetadataAddOrUpdateValuesForListFields()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataGetAListOfFields
     *
     * Get a list of fields.
     *
     */
    public function testMetadataGetAListOfFields()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataGetAListOfTabularFields
     *
     * Get a list of tabular fields.
     *
     */
    public function testMetadataGetAListOfTabularFields()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for metadataGetDetailsForListFields
     *
     * Get details for list fields.
     *
     */
    public function testMetadataGetDetailsForListFields()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApplicantStatus
     *
     * Change Applicant's Status.
     *
     */
    public function testPostApplicantStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postApplicationComment
     *
     * Add Application Comment.
     *
     */
    public function testPostApplicationComment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postCloseGoal
     *
     * Close Goal.
     *
     */
    public function testPostCloseGoal()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postGoal
     *
     * Create Goal.
     *
     */
    public function testPostGoal()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postGoalComment
     *
     * Create Goal Comment.
     *
     */
    public function testPostGoalComment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postReopenGoal
     *
     * Reopen a Goal.
     *
     */
    public function testPostReopenGoal()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postWebhook
     *
     * Add Webhook.
     *
     */
    public function testPostWebhook()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putGoalComment
     *
     * Update Goal Comment.
     *
     */
    public function testPutGoalComment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putGoalMilestoneProgress
     *
     * Update Milestone Progress.
     *
     */
    public function testPutGoalMilestoneProgress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putGoalProgress
     *
     * Update Goal Progress.
     *
     */
    public function testPutGoalProgress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putGoalSharedWith
     *
     * Update Goal Sharing.
     *
     */
    public function testPutGoalSharedWith()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putGoalV1
     *
     * Update Goal.
     *
     */
    public function testPutGoalV1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putGoalV11
     *
     * Update Goal, V1.1.
     *
     */
    public function testPutGoalV11()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putWebhook
     *
     * Update Webhook.
     *
     */
    public function testPutWebhook()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for requestCustomReport
     *
     * Request a custom report.
     *
     */
    public function testRequestCustomReport()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for timeOffAddATimeOffHistoryItemForTimeOffRequest
     *
     * Add a Time Off History Item For Time Off Request.
     *
     */
    public function testTimeOffAddATimeOffHistoryItemForTimeOffRequest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for timeOffAddATimeOffRequest
     *
     * Add a Time Off Request.
     *
     */
    public function testTimeOffAddATimeOffRequest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for timeOffAdjustTimeOffBalance
     *
     * Adjust Time Off Balance.
     *
     */
    public function testTimeOffAdjustTimeOffBalance()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for timeOffAssignTimeOffPoliciesForAnEmployee
     *
     * Assign Time Off Policies for an Employee.
     *
     */
    public function testTimeOffAssignTimeOffPoliciesForAnEmployee()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for timeOffChangeARequestStatus
     *
     * Change a Request Status.
     *
     */
    public function testTimeOffChangeARequestStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for timeOffGetTimeOffRequests
     *
     * Get Time Off Requests.
     *
     */
    public function testTimeOffGetTimeOffRequests()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for timeOffListTimeOffPoliciesForEmployee
     *
     * List Time Off Policies for Employee.
     *
     */
    public function testTimeOffListTimeOffPoliciesForEmployee()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for timeOffV11AssignTimeOffPoliciesForAnEmployee
     *
     * Assign Time Off Policies for an Employee, Version 1.1.
     *
     */
    public function testTimeOffV11AssignTimeOffPoliciesForAnEmployee()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for timeOffV11ListTimeOffPoliciesForEmployee
     *
     * List Time Off Policies for Employee, Version 1.1.
     *
     */
    public function testTimeOffV11ListTimeOffPoliciesForEmployee()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCompanyFile
     *
     * Update Company File.
     *
     */
    public function testUpdateCompanyFile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateEmployee
     *
     * Update Employee.
     *
     */
    public function testUpdateEmployee()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateEmployeeDependent
     *
     * Update an employee dependent.
     *
     */
    public function testUpdateEmployeeDependent()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateEmployeeFile
     *
     * Update Employee File.
     *
     */
    public function testUpdateEmployeeFile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateEmployeeTableRow
     *
     * Updates a table row..
     *
     */
    public function testUpdateEmployeeTableRow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateEmployeeTableRowV
     *
     * Updates a table row..
     *
     */
    public function testUpdateEmployeeTableRowV()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateEmployeeTrainingRecord
     *
     * Update Employee Training Record.
     *
     */
    public function testUpdateEmployeeTrainingRecord()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateTrainingCategory
     *
     * Update Training Category.
     *
     */
    public function testUpdateTrainingCategory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateTrainingType
     *
     * Update Training Type.
     *
     */
    public function testUpdateTrainingType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uploadCompanyFile
     *
     * Upload Company File.
     *
     */
    public function testUploadCompanyFile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uploadEmployeeFile
     *
     * Upload Employee File.
     *
     */
    public function testUploadEmployeeFile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uploadEmployeePhoto
     *
     * Store a new employee photo.
     *
     */
    public function testUploadEmployeePhoto()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
